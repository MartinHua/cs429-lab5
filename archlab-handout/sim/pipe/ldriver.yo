                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f40806000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f68803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f78001000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # This is written by Xinrui Hua, xh3426
                            | #
                            | # Describe how and why you modified the baseline code.
                            | # Use iaddq
                            | # Decrease Data Hazard
                            | # Loop unrollling
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax, %rax		# count = 0;
0x034: c0f2fdffffffffffffff | 	iaddq $-3, %rdx     # len -= 3;
0x03e: 76ab00000000000000   | 	jg Loop0		    # if so, goto loop to decrease length to less than 4:
0x047:                      | Restore:
0x047: c0f20300000000000000 | 	iaddq $3, %rdx
0x051:                      | Residual0:
0x051: 765b00000000000000   | 	jg Residual1
0x05a: 90                   | 	ret
0x05b:                      | Residual1:
0x05b: 50a70000000000000000 | 	mrmovq (%rdi), %r10
0x065: c0f70800000000000000 | 	iaddq $8, %rdi
0x06f: 62aa                 | 	andq %r10, %r10
0x071: 718400000000000000   | 	jle Residual2
0x07a: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x084:                      | Residual2:
0x084: 40a60000000000000000 | 	rmmovq %r10, (%rsi)
0x08e: c0f60800000000000000 | 	iaddq $8, %rsi
0x098: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x0a2: 705100000000000000   | 	jmp Residual0
0x0ab:                      | Loop0:
0x0ab: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x0b5: c0f72000000000000000 | 	iaddq $32, %rdi     # src += 4
0x0bf: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x0c9: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x0cb: 71de00000000000000   | 	jle Loop1		    # if so, goto Loop1:
0x0d4: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x0de:                      | Loop1:	
0x0de: 50a7e8ffffffffffffff | 	mrmovq -24(%rdi), %r10	# read val from src...
0x0e8: c0f62000000000000000 | 	iaddq $32, %rsi     # dst += 4
0x0f2: 40a6e8ffffffffffffff | 	rmmovq %r10, -24(%rsi)	# ...and store it to dst
0x0fc: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x0fe: 50a7f0ffffffffffffff | 	mrmovq -16(%rdi), %r10	# read val from src...
0x108: 711b01000000000000   | 	jle Loop2		    # if so, goto Loop2:
0x111: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x11b:                      | Loop2:	
0x11b: 40a6f0ffffffffffffff | 	rmmovq %r10, -16(%rsi)	# ...and store it to dst
0x125: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x127: 50a7f8ffffffffffffff | 	mrmovq -8(%rdi), %r10	# read val from src...
0x131: 714401000000000000   | 	jle Loop3		    # if so, goto Loop3:
0x13a: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x144:                      | Loop3:	
0x144: 40a6f8ffffffffffffff | 	rmmovq %r10, -8(%rsi)	# ...and store it to dst
0x14e: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x150: 716301000000000000   | 	jle Loop4		    # if so, goto Loop4:
0x159: c0f00100000000000000 | 	iaddq $1, %rax		# count++
0x163:                      | Loop4:
0x163: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x16d: 76ab00000000000000   | 	jg Loop0
0x176: 704700000000000000   | 	jmp Restore
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x17f:                      | Done:
0x17f: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x180:                      | End:
                            | #/* $end ncopy-ys */
0x180:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x180:                      | 	.align 8
0x180:                      | src:
0x180: 0100000000000000     | 	.quad 1
0x188: 0200000000000000     | 	.quad 2
0x190: fdffffffffffffff     | 	.quad -3
0x198: fcffffffffffffff     | 	.quad -4
0x1a0: fbffffffffffffff     | 	.quad -5
0x1a8: faffffffffffffff     | 	.quad -6
0x1b0: 0700000000000000     | 	.quad 7
0x1b8: f8ffffffffffffff     | 	.quad -8
0x1c0: 0900000000000000     | 	.quad 9
0x1c8: f6ffffffffffffff     | 	.quad -10
0x1d0: f5ffffffffffffff     | 	.quad -11
0x1d8: f4ffffffffffffff     | 	.quad -12
0x1e0: f3ffffffffffffff     | 	.quad -13
0x1e8: 0e00000000000000     | 	.quad 14
0x1f0: 0f00000000000000     | 	.quad 15
0x1f8: f0ffffffffffffff     | 	.quad -16
0x200: 1100000000000000     | 	.quad 17
0x208: eeffffffffffffff     | 	.quad -18
0x210: edffffffffffffff     | 	.quad -19
0x218: 1400000000000000     | 	.quad 20
0x220: 1500000000000000     | 	.quad 21
0x228: 1600000000000000     | 	.quad 22
0x230: e9ffffffffffffff     | 	.quad -23
0x238: 1800000000000000     | 	.quad 24
0x240: 1900000000000000     | 	.quad 25
0x248: e6ffffffffffffff     | 	.quad -26
0x250: e5ffffffffffffff     | 	.quad -27
0x258: 1c00000000000000     | 	.quad 28
0x260: 1d00000000000000     | 	.quad 29
0x268: 1e00000000000000     | 	.quad 30
0x270: e1ffffffffffffff     | 	.quad -31
0x278: 2000000000000000     | 	.quad 32
0x280: 2100000000000000     | 	.quad 33
0x288: 2200000000000000     | 	.quad 34
0x290: ddffffffffffffff     | 	.quad -35
0x298: 2400000000000000     | 	.quad 36
0x2a0: 2500000000000000     | 	.quad 37
0x2a8: 2600000000000000     | 	.quad 38
0x2b0: 2700000000000000     | 	.quad 39
0x2b8: 2800000000000000     | 	.quad 40
0x2c0: 2900000000000000     | 	.quad 41
0x2c8: 2a00000000000000     | 	.quad 42
0x2d0: 2b00000000000000     | 	.quad 43
0x2d8: d4ffffffffffffff     | 	.quad -44
0x2e0: 2d00000000000000     | 	.quad 45
0x2e8: d2ffffffffffffff     | 	.quad -46
0x2f0: d1ffffffffffffff     | 	.quad -47
0x2f8: 3000000000000000     | 	.quad 48
0x300: 3100000000000000     | 	.quad 49
0x308: ceffffffffffffff     | 	.quad -50
0x310: 3300000000000000     | 	.quad 51
0x318: ccffffffffffffff     | 	.quad -52
0x320: cbffffffffffffff     | 	.quad -53
0x328: 3600000000000000     | 	.quad 54
0x330: c9ffffffffffffff     | 	.quad -55
0x338: c8ffffffffffffff     | 	.quad -56
0x340: c7ffffffffffffff     | 	.quad -57
0x348: c6ffffffffffffff     | 	.quad -58
0x350: c5ffffffffffffff     | 	.quad -59
0x358: c4ffffffffffffff     | 	.quad -60
0x360: c3ffffffffffffff     | 	.quad -61
0x368: c2ffffffffffffff     | 	.quad -62
0x370: c1ffffffffffffff     | 	.quad -63
0x378: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x380:                      | 	.align 16
0x380:                      | Predest:
0x380: fadebc0000000000     | 	.quad 0xbcdefa
0x388:                      | dest:
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500: abefcd0000000000     | 	.quad 0xcdefab
0x508: abefcd0000000000     | 	.quad 0xcdefab
0x510: abefcd0000000000     | 	.quad 0xcdefab
0x518: abefcd0000000000     | 	.quad 0xcdefab
0x520: abefcd0000000000     | 	.quad 0xcdefab
0x528: abefcd0000000000     | 	.quad 0xcdefab
0x530: abefcd0000000000     | 	.quad 0xcdefab
0x538: abefcd0000000000     | 	.quad 0xcdefab
0x540: abefcd0000000000     | 	.quad 0xcdefab
0x548: abefcd0000000000     | 	.quad 0xcdefab
0x550: abefcd0000000000     | 	.quad 0xcdefab
0x558: abefcd0000000000     | 	.quad 0xcdefab
0x560: abefcd0000000000     | 	.quad 0xcdefab
0x568: abefcd0000000000     | 	.quad 0xcdefab
0x570: abefcd0000000000     | 	.quad 0xcdefab
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580:                      | Postdest:
0x580: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x588:                      | .align 8
                            | # Run time stack
0x588: 0000000000000000     | 	.quad 0
0x590: 0000000000000000     | 	.quad 0
0x598: 0000000000000000     | 	.quad 0
0x5a0: 0000000000000000     | 	.quad 0
0x5a8: 0000000000000000     | 	.quad 0
0x5b0: 0000000000000000     | 	.quad 0
0x5b8: 0000000000000000     | 	.quad 0
0x5c0: 0000000000000000     | 	.quad 0
0x5c8: 0000000000000000     | 	.quad 0
0x5d0: 0000000000000000     | 	.quad 0
0x5d8: 0000000000000000     | 	.quad 0
0x5e0: 0000000000000000     | 	.quad 0
0x5e8: 0000000000000000     | 	.quad 0
0x5f0: 0000000000000000     | 	.quad 0
0x5f8: 0000000000000000     | 	.quad 0
0x600: 0000000000000000     | 	.quad 0
                            | 
0x608:                      | Stack:
